[package]
name = "{{project-name}}"
version = "0.1.0"
authors = ["{{authors}}"]
edition = "2024"
license = "MIT OR Apache-2.0"
repository = "https://github.com/{{authors}}/{{authors}}"

[features]
default = [
    "dev_native",                   # Default to a native dev build.
]
dev_native = [
    "bevy/bevy_dev_tools",
    "bevy/bevy_ui_debug",
    "bevy/dynamic_linking",         # Improve compile times for dev builds by linking Bevy as a dynamic library.
    "bevy/file_watcher",            # Enable asset hot reloading for native dev builds.
    "bevy/embedded_watcher",        # Enable embedded asset hot reloading for native dev builds.
    "enhanced"
]

# For all dev builds (shared logic, wasm-safe)
wasm = ["bevy/bevy_dev_tools", "enhanced"]
enhanced = [
    "bevy/meshlet",                 # new nanite-like rendering system
    "bevy/pbr_specular_textures"    # PBR specular maps
]

[dependencies]
# TODO: use after 0.16 migration
# bevy_seedling = "0.3"
# everything except bevy_audio
bevy = { version = "^0.16", default-features = false, features = [
    "std",
    "vorbis",
    "bevy_audio",
    "animation",
    "bevy_asset",
    "bevy_color",
    "bevy_core_pipeline",
    "bevy_gilrs",
    "bevy_gizmos",
    "bevy_gltf",
    "bevy_input_focus",
    "bevy_log",
    "bevy_mesh_picking_backend",
    "bevy_pbr",
    "bevy_picking",
    "bevy_render",
    "bevy_scene",
    "bevy_sprite",
    "bevy_sprite_picking_backend",
    "bevy_state",
    "bevy_text",
    "bevy_ui",
    "bevy_ui_picking_backend",
    "bevy_window",
    "bevy_winit",
    "custom_cursor",
    "default_font",
    "hdr",
    "multi_threaded",
    "png",
    "jpeg",
    "smaa_luts",
    "sysinfo_plugin",
    "tonemapping_luts",
    "x11",
    "webgl2",
    "wayland"
] }

# plugins
# wireframes
# TODO: add when 0.16
# aalo = { version = "0.0.5", optional = true }

# physics
avian3d = { version = "0.3", features = ["3d", "parallel", "collider-from-mesh"] }

# camera
bevy_third_person_camera = "0.2"

# floating character control
bevy-tnua = "0.24"
bevy-tnua-avian3d = "0.5"

# diagnostics overlay
iyes_perf_ui = "0.5.0-rc.1"

# key bindings
leafwing-input-manager = "0.17"

# other
ron = "0.10"
rand = { version = "0.8" }
serde = "1"
thiserror = "2.0.12"
image = "0.25.6"
## This greatly improves WGPU's performance due to its heavy use of trace! calls
log = { version = "0.4", features = ["max_level_debug", "release_max_level_warn"] }
# keep the following in sync with Bevy's dependencies
winit = { version = "0.30", default-features = false }
bevy_fix_gltf_coordinate_system = "0.1.0"

# TODO: delete after everyone migrates to 0.16
[patch.crates-io]
iyes_perf_ui = { git = "https://github.com/IyesGames/iyes_perf_ui", branch = "main" }

[lints.clippy]
# Bevy supplies arguments to systems via dependency injection, so it's natural for systems to
# request more than 7 arguments, which would undesirably trigger this lint.
too_many_arguments = "allow"
# Queries may access many components, which would undesirably trigger this lint.
type_complexity = "allow"
# Make sure macros use their standard braces, such as `[]` for `bevy_ecs::children!`.
nonstandard_macro_braces = "warn"


# Enable a small amount of optimization in the dev profile.
[profile.dev]
opt-level = 1
# Enable a large amount of optimization in the dev profile for dependencies.
[profile.dev.package."*"]
opt-level = 3

[profile.release]
# Do a second optimization pass over the entire program, including dependencies.
# Slows compile times, marginal improvements.
lto = "thin"
# Optimize with size in mind (also try "z", sometimes it is better).
# Slightly slows compile times, great improvements to file size and runtime performance.
opt-level = "s"
# Compile the entire crate as one unit. Slows compile times, marginal improvements.
codegen-units = 1
strip = true

# Profile for distribution
[profile.dist]
inherits = "release"
opt-level = 3
lto = true
codegen-units = 1
strip = true

# Optimize for size in the wasm-release profile to reduce load times and bandwidth usage on web.
[profile.wasm-release]
inherits = "release"
# Strip all debugging information from the binary to slightly reduce file size.
strip = "debuginfo"

[build-dependencies]
embed-resource = "1"
